## <summary>GNU network object model environment (GNOME)</summary>

############################################################
## <summary>
##	Role access for gnome
## </summary>
## <param name="role">
##	<summary>
##	Role allowed access
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	User domain for the role
##	</summary>
## </param>
#
interface(`gnome_role',`
	gen_require(`
		type gconfd_t, gconfd_exec_t;
		type gconf_tmp_t;
		type gconf_home_t;
	')

	role $1 types gconfd_t;

	domain_auto_trans($2, gconfd_exec_t, gconfd_t)
	allow gconfd_t $2:fd use;
	allow gconfd_t $2:fifo_file write;
	allow gconfd_t $2:unix_stream_socket connectto;

	manage_dirs_pattern($2, gconf_home_t, gconf_home_t)
	manage_files_pattern($2, gconf_home_t, gconf_home_t)

	ps_process_pattern($2, gconfd_t)

	#gnome_stream_connect_gconf_template($1, $2)
	read_files_pattern($2, gconf_tmp_t, gconf_tmp_t)
	allow $2 gconfd_t:unix_stream_socket connectto;

	gnome_manage_config($2)
')

########################################
## <summary>
##	Execute gconf programs in
##	in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_exec_gconf',`
	gen_require(`
		type gconfd_exec_t;
	')

	can_exec($1, gconfd_exec_t)
')

########################################
## <summary>
##	Read gconf config files.
## </summary>
## <param name="user_domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
template(`gnome_read_gconf_config',`
	gen_require(`
		type gconf_etc_t;
	')

	allow $1 gconf_etc_t:dir list_dir_perms;
	read_files_pattern($1, gconf_etc_t, gconf_etc_t)
	files_search_etc($1)
')

#######################################
## <summary>
##	Create, read, write, and delete gconf config files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_manage_gconf_config',`
	gen_require(`
		type gconf_etc_t;
	')

	manage_files_pattern($1, gconf_etc_t, gconf_etc_t)
	files_search_etc($1)
')

########################################
## <summary>
##	gconf connection template.
## </summary>
## <param name="user_domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_stream_connect_gconf',`
	gen_require(`
		type gconfd_t, gconf_tmp_t;
	')

	read_files_pattern($1, gconf_tmp_t, gconf_tmp_t)
	allow $1 gconfd_t:unix_stream_socket connectto;
')

########################################
## <summary>
##	Run gconfd in gconfd domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_domtrans_gconfd',`
	gen_require(`
		type gconfd_t, gconfd_exec_t;
	')

	domtrans_pattern($1, gconfd_exec_t, gconfd_t)
')

########################################
## <summary>
##	Set attributes of Gnome config dirs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_setattr_config_dirs',`
	gen_require(`
		type gnome_home_t;
		type gnome_xdg_config_t;
	')

	setattr_dirs_pattern($1, gnome_home_t, gnome_home_t)
	setattr_dirs_pattern($1, gnome_xdg_config_t, gnome_xdg_config_t)
	files_search_home($1)
')

########################################
## <summary>
##	Read gnome homedir content (.config)
## </summary>
## <param name="user_domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
template(`gnome_read_config',`
	gen_require(`
		type gnome_home_t;
		type gnome_xdg_config_t;
	')

	list_dirs_pattern($1, gnome_home_t, gnome_home_t)
	read_files_pattern($1, gnome_home_t, gnome_home_t)
	read_lnk_files_pattern($1, gnome_home_t, gnome_home_t)

	list_dirs_pattern($1, gnome_xdg_config_t, gnome_xdg_config_t)
	read_files_pattern($1, gnome_xdg_config_t, gnome_xdg_config_t)
	read_lnk_files_pattern($1, gnome_xdg_config_t, gnome_xdg_config_t)
')

########################################
## <summary>
##	manage gnome homedir content (.config)
## </summary>
## <param name="user_domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_manage_config',`
	gen_require(`
		type gnome_home_t;
		type gnome_xdg_config_t;
	')

	manage_dirs_pattern($1, gnome_home_t, gnome_home_t)
	manage_files_pattern($1, gnome_home_t, gnome_home_t)

	manage_dirs_pattern($1, gnome_xdg_config_t, gnome_xdg_config_t)
	manage_files_pattern($1, gnome_xdg_config_t, gnome_xdg_config_t)

	userdom_search_user_home_dirs($1)
')
