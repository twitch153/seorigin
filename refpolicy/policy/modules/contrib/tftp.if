## <summary>Trivial file transfer protocol daemon</summary>

########################################
## <summary>
##	Read tftp content
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`tftp_read_content',`
	gen_require(`
		type tftpdir_t;
	')

	read_files_pattern($1, tftpdir_t, tftpdir_t)
')

########################################
## <summary>
##	Manage tftp /var/lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`tftp_manage_rw_content',`
	gen_require(`
		type tftpdir_rw_t;
	')

	files_search_var_lib($1)
	manage_dirs_pattern($1, tftpdir_rw_t, tftpdir_rw_t)
	manage_files_pattern($1, tftpdir_rw_t, tftpdir_rw_t)
')

########################################
## <summary>
##	All of the rules required to administrate
##	an tftp environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`tftp_admin',`
	gen_require(`
		type tftpd_t, tftpdir_t, tftpdir_rw_t, tftpd_var_run_t;
	')

	allow $1 tftpd_t:process { ptrace signal_perms getattr };
	ps_process_pattern($1, tftpd_t)

	admin_pattern($1, tftpdir_rw_t)

	admin_pattern($1, tftpdir_t)

	files_list_pids($1)
	admin_pattern($1, tftpd_var_run_t)
')
