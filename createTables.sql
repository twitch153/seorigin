PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE TB_FILES (FileId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FileName Text NOT NULL);
CREATE TABLE TB_DEFINITIONNAMES (DefinitionId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, DefinitionName Text NOT NULL);
CREATE TABLE TB_LABEL (LabelId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, LabelClass INTEGER NOT NULL, Name Text NOT NULL);
CREATE TABLE TB_LABELSET (LabelSetId INTEGER NOT NULL, LabelId INTEGER NOT NULL, PRIMARY KEY (LabelSetId, LabelId), FOREIGN KEY(LabelId) REFERENCES TB_LABEL(LabelId));
CREATE TABLE TB_STATEMENT_DECLARE (StatementId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, DeclarationClass INTEGER NOT NULL, TargetId INTEGER NOT NULL, AliasId INTEGER, FOREIGN KEY(TargetId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(AliasId) REFERENCES TB_LABELSET(LabelSetId));
CREATE TABLE TB_STATEMENT_ALLOW (StatementId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, SourceId INTEGER NOT NULL, SourceModifier INTEGER NOT NULL, TargetId INTEGER NOT NULL, TargetModifier INTEGER NOT NULL, ClassesId INTEGER NOT NULL, ClassesModifier INTEGER NOT NULL, PrivilegeId INTEGER NOT NULL, PrivilegeModifier INTEGER NOT NULL, FOREIGN KEY(SourceId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(TargetId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(ClassesId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(PrivilegeId) REFERENCES TB_LABELSET(LabelSetId));
CREATE TABLE TB_STATEMENT_INTERFACE (StatementId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, InterfaceId INTEGER NOT NULL, Arg1LabelId INTEGER NOT NULL, Arg2LabelId INTEGER, Arg3LabelId INTEGER, Arg4LabelId INTEGER, Arg5LabelId INTEGER, FOREIGN KEY(InterfaceId) REFERENCES TB_DEFINITIONNAMES(DefinitionId), FOREIGN KEY(Arg1LabelId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(Arg2LabelId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(Arg3LabelId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(Arg4LabelId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(Arg5LabelId) REFERENCES TB_LABELSET(LabelSetId));
CREATE TABLE TB_STATEMENT_ASSIGN(StatementId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, AssignationType INTEGER NOT NULL, TargetLabelId INTEGER NOT NULL, AssignedLabelId INTEGER NOT NULL, FOREIGN KEY(TargetLabelId) REFERENCES TB_LABELSET(LabelSetId), FOREIGN KEY(AssignedLabelId) REFERENCES TB_LABELSET(LabelSetId));
CREATE TABLE TB_DEFINITION_CONTENT(DefinitionId INTEGER NOT NULL, StatementDeclareId INTEGER, StatementAllowId INTEGER, StatementInterfaceId INTEGER, StatementAssignId INTEGER, FOREIGN KEY(DefinitionId) REFERENCES TB_DEFINITIONNAMES(DefinitionId), FOREIGN KEY(StatementDeclareId) REFERENCES TB_STATEMENT_DECLARE(StatementId), FOREIGN KEY(StatementAllowId) REFERENCES TB_STATEMENT_ALLOW(StatementId), FOREIGN KEY(StatementInterfaceId) REFERENCES TB_STATEMENT_INTERFACE(StatementId), FOREIGN KEY(StatementAssignId) REFERENCES TB_STATEMENT_ASSIGN(StatementId));
CREATE TABLE TB_SOURCE (FileId INTEGER NOT NULL, LineNumber INTEGER NOT NULL, StatementDeclareId INTEGER, StatementAllowId INTEGER, StatementInterfaceId INTEGER, StatementAssignId INTEGER, FOREIGN KEY(StatementDeclareId) REFERENCES TB_STATEMENT_DECLARE(StatementId), FOREIGN KEY(StatementAllowId) REFERENCES TB_STATEMENT_ALLOW(StatementId), FOREIGN KEY(StatementInterfaceId) REFERENCES TB_STATEMENT_INTERFACE(StatementId), FOREIGN KEY(StatementAssignId) REFERENCES TB_STATEMENT_ASSIGN(StatementId));
COMMIT;
